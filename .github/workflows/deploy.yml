name: Deploy to AWS Lambda

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python test_api_call_structure_fixed.py
        python test_lambda_mock.py

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Check AWS credentials
      run: |
        if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
          echo "❌ AWS credentials not configured. Skipping deployment."
          echo "Please add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY as repository secrets."
          exit 0
        fi
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Create deployment package
      run: |
        zip -r lambda_function.zip . \
          -x "*.pyc" \
          -x "__pycache__/*" \
          -x "*.git*" \
          -x "test_*.py" \
          -x "README.md" \
          -x ".gitignore" \
          -x "requirements.txt" \
          -x "deploy.sh" \
          -x "lambda_function.zip" \
          -x ".github/*"
    
    - name: Deploy to Lambda
      run: |
        if aws lambda get-function --function-name mrr-v3-lambda &> /dev/null; then
          echo "🔄 Updating existing Lambda function: mrr-v3-lambda"
          aws lambda update-function-code \
            --function-name mrr-v3-lambda \
            --zip-file fileb://lambda_function.zip
        else
          echo "📦 Creating new Lambda function: mrr-v3-lambda"
          # Note: You'll need to create the function manually first with proper IAM role
          echo "Please create the Lambda function manually with:"
          echo "aws lambda create-function \\"
          echo "  --function-name mrr-v3-lambda \\"
          echo "  --runtime python3.11 \\"
          echo "  --handler lambda_function.lambda_handler \\"
          echo "  --role arn:aws:iam::YOUR_ACCOUNT:role/lambda-execution-role \\"
          echo "  --zip-file fileb://lambda_function.zip"
          exit 1
        fi
    
    - name: Update function configuration
      run: |
        aws lambda update-function-configuration \
          --function-name mrr-v3-lambda \
          --timeout 900 \
          --memory-size 512 \
          --environment Variables='{
            "OPENAI_API_KEY":"${{ secrets.OPENAI_API_KEY }}",
            "PAGES_BUCKET":"${{ secrets.PAGES_BUCKET }}",
            "AUDIO_LAMBDA_URL":"${{ secrets.AUDIO_LAMBDA_URL }}",
            "MARKET_RESEARCH_TABLE":"${{ secrets.MARKET_RESEARCH_TABLE }}"
          }' 